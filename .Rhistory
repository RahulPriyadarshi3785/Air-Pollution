heatmap
heatmap(dataMatrix)
library(swirl)
swirl()
mat
svd(mat)
matu %*% d %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd1$d[1])%*%svd1$v[,1]
a1 <- (svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2]*svd1$d[1:2]%*%t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]%*%svd1$d[1:2]%*%t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]%*%t(svd1$v[,1:2])%*%svd1$d[1:2]
a2 <- svd1$u[,1:2]%*%svd1$d[1:2]%*%t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]%*%svd1$d[1:2]%*%t(svd1$v[,1:2)
a2 <- svd1$u[,1:2]%*%svd1$d[1:2]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd)[562:563]
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject = 1)
sub1 <- subset(ssd,subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,10:12,maxCon])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)],centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)],centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab = "Walkdown Cluster")
q()
library(kern)
library(kernlab)
install.packages("kernlab")
library(kernlab)
exit
q()
package_version(swirl)
package_version('swirl')
packageVersion('swirl')
load('swirl')
library('swirl')
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
1/52
52
1/13
0
12/52
3/51
2/50
2/51
.64
.64
View(mypdf)
View(mypdf)
'mypdf'
mypdf
integrate(mypdf,0,1.6)
1.414
2^(1/2)
.000997
0.015*.999
.000997/(0.014985+.000997)
7/2
expect_dice
dice_high
range(6)
seq(6)
View(except_dice)
View(expect_dice)
View(expect_dice)
expect_dice(dice_high)
expect_dice(dice_low)
(edh + ehl)/2
(edh + edl)/2
integrate(myfunc,0,2)
View(myfunc)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
help("qunif")
q(.75,0,1)
qunif(.75,0,1)
.75*.3/(.75*.3+.48*.7)
help("read.csv")
df <- read.csv("C:/Users/hp/Downloads/aqi-data-kanpur.csv")
head(df)
df <- read.csv("C:/Users/hp/Downloads/aqi-data-kanpur.csv", header = FALSE)
head(df)
colnames(df)
colnames(df) = ["Site_Code", "Place", "Pollutant", "Time", "pollution_Level"]
colnames(df) = c("Site_Code", "Place", "Pollutant", "Time", "pollution_Level")
head(df)
summary(df)
dtype(df)
str(df)
df <- read.csv("C:/Users/hp/Downloads/aqi-data-kanpur.csv", header = FALSE, na.strings = "None", col.names = c("Site_Code", "Place", "Pollutant", "Time", "pollution_Level"))
dim(df)
df[1:5]
is.na(df$pollution_Level)
str(df)
df <- read.csv("C:/Users/hp/Downloads/aqi-data-kanpur.csv", header = FALSE, na.strings = " None", col.names = c("Site_Code", "Place", "Pollutant", "Time", "pollution_Level"))
dim(df)
head(df)
str(df)
is.na(df$pollution_Level)
df$pollution_Level[91]
df[is.na(df)]
head(df)
df[is.na(df$pollution_Level)]
df[is.na(df$pollution_Level),:]
df[is.na(df$pollution_Level),]
df1 <- df[!is.na(df$pollution_Level),]
df[is.na(df$Time),:]
df[is.na(df$Time),]
df[is.na(df$pollution_Level),]
df1[is.na(df$pollution_Level),]
str(df1)
as.Date("Friday, 02 Mar 2018, 08:00 PM")
help("strptime")
strptime("Friday, 02 Mar 2018, 08:00 PM", "%A, %d %b %Y, %H:%M")
library(lubridate)
help("lubridate")
help("lubridate")
strptime(df1$Time, "%A, %d %b %Y, %H:%M")
str(df1)
df1$Time <- strptime(df1$Time, "%A, %d %b %Y, %H:%M")
str(df1)
df1 <- df[!is.na(df$pollution_Level),]
str(df1)
df1$Time <- strptime(df1$Time, " %A, %d %b %Y, %H:%M")
str(df1)
dmy_hm("Friday, 02 Mar 2018, 08:00 PM", "%A, %d %b %Y, %H:%M")
strptime("Friday, 02 Mar 2018, 08:00 PM", "%A, %d %b %Y, %H:%M")
d_dmy_hm("Friday, 02 Mar 2018, 08:00 PM", "%A, %d %b %Y, %H:%M")
dim(df1)
library(dplyr)
df2 <- df1 %>% mutate(month_Year = format(Time, "%m %Y")) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
df2 <- df1 %>% mutate(month_Year = as.POSIXct(format(Time, "%m %Y"))) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
df1$Time <- as.POSIXct(strptime(df1$Time, " %A, %d %b %Y, %H:%M"))
df2 <- df1 %>% mutate(month_Year = format(Time, "%m %Y")) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
head(df2)
str(df1)
df <- read.csv("C:/Users/hp/Downloads/aqi-data-kanpur.csv", header = FALSE, na.strings = " None", col.names = c("Site_Code", "Place", "Pollutant", "Time", "pollution_Level"))
dim(df)
head(df)
str(df)
df1 <- df[!is.na(df$pollution_Level),]
df1$Time <- as.POSIXct(strptime(df1$Time, " %A, %d %b %Y, %H:%M"))
str(df1)
df2 <- df1 %>% mutate(month_Year = format(Time, "%m %Y")) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
head(df2)
str(df2)
help("POSIXlt")
df2 <- df1 %>% mutate(month_Year = Time, "%m %Y") %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
str(df2)
head(df2)
df2 <- df1 %>% mutate(month_Year = as.POSIXct(strptime(format(Time, "%m %Y"), "%m %Y"))) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
str(df2)
df2 <- df1 %>% mutate(month_Year = strptime(format(Time, "%m %Y"), "%m %Y")) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
df2 <- df1 %>% mutate(month_Year = format(Time, "%m %Y")) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
str(df2)
head(df2)
x <- as.POSIXct(df2$month_Year)
x <- as.POSIXct(strptime(df2$month_Year, "%m %Y"))
head(x)
df2 <- df1 %>% mutate(month_Year = integer(format(Time, "%Y%m"))) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
df2 <- df1 %>% mutate(month_Year = format(Time, "%Y%m")) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
str(df2)
df2 <- df1 %>% mutate(month_Year = as.integer(format(Time, "%Y%m"))) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
str(df2)
library(ggplot2)
g <- ggplot(df2, aes(month_Year, monthly_pollution_mean))
g + geom_point(alpha = 1/3) + facet_grid(.~Pollutant)
g + geom_point(alpha = 1/3) + facet_grid(.~Pollutant)
g + geom_point(alpha = 1/3) + facet_grid(.~Pollutant)
g + geom_point(alpha = 1/3) + facet_grid(.~Pollutant) +geom_smooth(method = "lm", se = FALSE, col = "steelblue")
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue")
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.)  +geom_line()
g <- ggplot(df2, aes(month_Year, log(monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line() + labs
g <- ggplot(df2, aes(month_Year, log(monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
g <- ggplot(df2, aes(month_Year, (monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
g <- ggplot(df2, aes(month_Year, log(monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
dim(df2)
tail(df2)
tail(df2,10)
tail(df2,20)
tail(df2,25)
dim(df1)
df2 <- df1 %>% mutate(month_Year = as.integer(format(Time, "%Y%m"))) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level)) %>% filter(monthly_pollution_mean < 201800)
str(df2)
head(df2)
g <- ggplot(df2, aes(month_Year, log(monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
tail(df2)
df2 <- df1 %>% mutate(month_Year = as.integer(format(Time, "%Y%m"))) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
str(df2)
head(df2)
g <- ggplot(df2, aes(month_Year, log(monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
tail(df2)
df2 <- df1 %>% mutate(month_Year = as.integer(format(Time, "%Y%m"))) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
df2 <- df2[dim(df2)[0]-25,]
str(df2)
head(df2)
g <- ggplot(df2, aes(month_Year, log(monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
df2 <- df1 %>% mutate(month_Year = as.integer(format(Time, "%Y%m"))) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
str(df2)
dim(df2)
tail(df2[156-25,])
tail(df2)
tail(df2[dim(df2)[0]-25,])
dim(df2)[0]
dim(df2)[1]
tail(df2[dim(df2)[1]-25,])
tail(df2[1:dim(df2)[1]-25,])
tail(df2[1:(dim(df2)[1]-25),])
df2 <- df1 %>% mutate(month_Year = as.integer(format(Time, "%Y%m"))) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
df2 <- df2[1:(dim(df2)[1]-25),]
str(df2)
head(df2)
g <- ggplot(df2, aes(month_Year, log(monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
tail(df2)
g <- ggplot(df2, aes(month_Year, (monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
df2 <- df1 %>% mutate(month_Year = as.integer(format(Time, "%Y%m"))) %>% group_by(month_Year, Pollutant) %>% summarise(monthly_pollution_mean = mean(pollution_Level))
df2 <- df2[1:(dim(df2)[1]-25),]
str(df2)
head(df2)
g <- ggplot(df2, aes(month_Year, log(monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
tail(df2)
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
g <- ggplot(df2, aes(month_Year, (monthly_pollution_mean)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
g <- ggplot(df1, aes(Time, (pollution_Level)))
g + geom_point(alpha = 1/3) + facet_grid(Pollutant~.) +geom_smooth(method = "lm", se = FALSE, col = "steelblue") +geom_line()
library(timeSeries)
exit()
q()
lapply(["Hmisc", "plyr", "dplyr", "bindrcpp"], require, character.only = TRUE)
x= ["Hmisc", "plyr", "dplyr", "bindrcpp"]
lapply(c("Hmisc", "plyr", "dplyr", "bindrcpp"), require, character.only = TRUE)
.56 + c(-1,1) * qnorm(.95) * sqrt
.56 + c(-1,1) * qnorm(.95) * sqrt(.56 *.44 / 100)
.56 + c(-1,1) * qnorm(.975) * sqrt(.56 *.44 / 100)
binom.test(56,100)$conf.int
load("C:/Users/hp/Desktop/Kanpur_Vansh/.RData")
View(W_best)
epsilon_best
cost_best
gamma_best
packages <- c("dplyr", "lubridate", "ggplot2", "hydroGOF", "e1071", "forecast", "tseries", "padr")
if(length(setdiff(packages, rownames(installed.packages()))) > 0){
install.packages(setdiff(packages, rownames(installed.packages())))
}
lapply(packages, require, character.only = TRUE)
setwd("C:/Users/hp/Desktop")
dir.create("Kanpur_Vansh")
setwd("Kanpur_Vansh")
df <- read.csv("C:/Users/hp/Downloads/aqi-data-kanpur.csv", header = FALSE, na.strings = " None", col.names = c("Site_Code", "Place", "Pollutant", "Time", "pollution_Level"))
df <- df[,-2:-1]
ggplot(df, aes(Time, pollution_Level)) + geom_line() + scale_x_date('month')  + ylab("Pollution Level") +
xlab("Time")
ggplot(df, aes(Time, pollution_Level)) + geom_line()  + ylab("Pollution Level") +
xlab("Time")
df$Time <- dmy_hm(df$Time)
minute(df$Time) <- 0
df1<- df[df$Time %within% interval(ymd("2012-04-02"), ymd_hm("2017-12-31 23:00")),]
df1$Pollutant <- as.factor(trimws(df1$Pollutant))
# df$Pollutant <- (trimws(df$Pollutant)) #character type output
dfsplit <- split(df1, df1$Pollutant)
lapply(dfsplit, summary)
ggplot(dfsplit$OZONE, aes(Time, pollution_Level)) + geom_line() + ylab("pollution Level") +
xlab("Time") + ggtitle("OZONE")
dfsplit <- lapply(dfsplit,
function(x){
if(hour(min(x$Time)) != 0){
x <- x[x$Time %within% interval(ymd(paste(year(min(x$Time)),"-",month(min(x$Time)),"-",day(min(x$Time)) + 1)), ymd_hm("2017-12-31 23:00")),]
}else{
x<-x
}
x <- x[-1]
}
)
first <- dfsplit$OZONE
first <- pad(first, interval = "hour")
l <- c()
k <- c()
for(i in 1:(length(first$Time)-1)){
if(as.integer(difftime(first$Time[i+1], first$Time[i], units = "hours")) != 1){
l <- c(l,i-1,i,i+1)
k <- c(k,i)
}
}
first[l,]
for(i in k){
if(!is.na(first[i,2]) && !is.na(first[i+1,2])){
first[i,2] <- (first[i,2]+first[i+1,2])/2
first[i+1,2] <- first[i,2]
}else if(is.na(first[i+1,2])){
first[i+1,2] <- first[i,2]
}else{
first[i,2] <- first[i+1,2]
}
first <- first[-1 * i,]
}
first[l,]
dfsplit$OZONE <- first
first <- dfsplit$CO
first <- pad(first, interval = "hour")
l <- c()
k <- c()
for(i in 1:(length(first$Time)-1)){
if(as.integer(difftime(first$Time[i+1], first$Time[i], units = "hours")) != 1){
l <- c(l,i-1,i,i+1)
k <- c(k,i)
}
}
first[l,]
for(i in k){
if(!is.na(first[i,2]) && !is.na(first[i+1,2])){
first[i,2] <- (first[i,2]+first[i+1,2])/2
first[i+1,2] <- first[i,2]
}else if(is.na(first[i+1,2])){
first[i+1,2] <- first[i,2]
}else{
first[i,2] <- first[i+1,2]
}
first <- first[-1 * i,]
}
first[l,]
dfsplit$CO <- first
first <- dfsplit$NO2
first <- pad(first, interval = "hour")
l <- c()
k <- c()
for(i in 1:(length(first$Time)-1)){
if(as.integer(difftime(first$Time[i+1], first$Time[i], units = "hours")) != 1){
l <- c(l,i-1,i,i+1)
k <- c(k,i)
}
}
first[l,]
for(i in k){
if(!is.na(first[i,2]) && !is.na(first[i+1,2])){
first[i,2] <- (first[i,2]+first[i+1,2])/2
first[i+1,2] <- first[i,2]
}else if(is.na(first[i+1,2])){
first[i+1,2] <- first[i,2]
}else{
first[i,2] <- first[i+1,2]
}
first <- first[-1 * i,]
}
first[l,]
dfsplit$NO2 <- first
first <- dfsplit$PM2.5
first <- pad(first, interval = "hour")
l <- c()
k <- c()
for(i in 1:(length(first$Time)-1)){
if(as.integer(difftime(first$Time[i+1], first$Time[i], units = "hours")) != 1){
l <- c(l,i-1,i,i+1)
k <- c(k,i)
}
}
first[l,]
for(i in k){
if(!is.na(first[i,2]) && !is.na(first[i+1,2])){
first[i,2] <- (first[i,2]+first[i+1,2])/2
first[i+1,2] <- first[i,2]
}else if(is.na(first[i+1,2])){
first[i+1,2] <- first[i,2]
}else{
first[i,2] <- first[i+1,2]
}
first <- first[-1 * i,]
}
first[l,]
dfsplit$PM2.5 <- first
first <- dfsplit$SO2
first <- pad(first, interval = "hour")
l <- c()
k <- c()
for(i in 1:(length(first$Time)-1)){
if(as.integer(difftime(first$Time[i+1], first$Time[i], units = "hours")) != 1){
l <- c(l,i-1,i,i+1)
k <- c(k,i)
}
}
first[l,]
for(i in k){
if(!is.na(first[i,2]) && !is.na(first[i+1,2])){
first[i,2] <- (first[i,2]+first[i+1,2])/2
first[i+1,2] <- first[i,2]
}else if(is.na(first[i+1,2])){
first[i+1,2] <- first[i,2]
}else{
first[i,2] <- first[i+1,2]
}
first <- first[-1 * i,]
}
first[l,]
dfsplit$SO2 <- first
insertRow2 <- function(existingDF, newrow, r) {
existingDF <- rbind(existingDF,newrow)
existingDF <- existingDF[order(c(1:(nrow(existingDF)-1),r-0.5)),]
row.names(existingDF) <- 1:nrow(existingDF)
return(existingDF)
}
ggplot(dfsplit$OZONE, aes(Time, pollution_Level)) + geom_line() + ylab("pollution Level") +
xlab("Time") + ggtitle("OZONE Data Wrangled")
ggplot(dfsplit$PM2.5, aes(Time, pollution_Level)) + geom_line() + ylab("pollution Level") +
xlab("Time") + ggtitle("PM2.5")
model <- lm(pollution_Level ~ Time, dfsplit$OZONE)
predictedY <- predict(model, dfsplit$OZONE)
Predicted_rmse <- hydroGOF::rmse(predictedY, dfsplit$OZONE$pollution_Level)
paste("Root Mean Error of Linear Regression MOdel : ", Predicted_rmse)
modelsvm = svm(pollution_Level ~ Time, data = dfsplit$OZONE, scale=FALSE, probability=TRUE)
predictYsvm = predict(modelsvm, dfsplit$OZONE)
# Predicted_rmse_svm <- rmse(modelsvm$residuals)
Predicted_rmse_svm <- hydroGOF::rmse(predictYsvm, dfsplit$OZONE$pollution_Level[!is.na(dfsplit$OZONE$pollution_Level)])
paste("Root Mean Error of Support Vector Regression MOdel using RBF : ", Predicted_rmse_svm)
g <- ggplot(dfsplit$OZONE[!is.na(dfsplit$OZONE$pollution_Level),], aes(Time, pollution_Level))
g + geom_point(alpha = 1/3) +
geom_point(aes(x=Time, y=predictYsvm), colour="red", pch = 4)
W = t(modelsvm$coefs) %*% modelsvm$SV
b = modelsvm$rho
packages <- c("dplyr", "lubridate", "ggplot2", "hydroGOF", "e1071", "forecast", "tseries", "padr")
if(length(setdiff(packages, rownames(installed.packages()))) > 0){
install.packages(setdiff(packages, rownames(installed.packages())))
}
lapply(packages, require, character.only = TRUE)
setwd("C:/Users/hp/Desktop")
dir.create("Kanpur_Vansh")
setwd("Kanpur_Vansh")
df <- read.csv("C:/Users/hp/Downloads/aqi-data-kanpur.csv", header = FALSE, na.strings = " None", col.names = c("Site_Code", "Place", "Pollutant", "Time", "pollution_Level"))
df <- df[,-2:-1]
ggplot(df, aes(Time, pollution_Level)) + geom_line() + ylab("Pollution Level") +
xlab("Time")
df$Time <- dmy_hm(df$Time)
packages <- c("dplyr", "lubridate", "ggplot2", "hydroGOF", "e1071", "forecast", "tseries", "padr")
if(length(setdiff(packages, rownames(installed.packages()))) > 0){
install.packages(setdiff(packages, rownames(installed.packages())))
}
lapply(packages, require, character.only = TRUE)
setwd("C:/Users/hp/Desktop")
dir.create("Kanpur_Vansh")
setwd("Kanpur_Vansh")
df <- read.csv("C:/Users/hp/Downloads/aqi-data-kanpur.csv", header = FALSE, na.strings = " None", col.names = c("Site_Code", "Place", "Pollutant", "Time", "pollution_Level"))
df <- df[,-2:-1]
df$Time <- dmy_hm(df$Time)
minute(df$Time) <- 0
df2<- df[!(df$Time %within% interval(ymd("2015-01-01"), ymd_hm("2017-12-31 23:00"))),]
df2$Pollutant <- as.factor(trimws(df2$Pollutant))
# df$Pollutant <- (trimws(df$Pollutant)) #character type output
dfsplit2 <- split(df2, df2$Pollutant)
lapply(dfsplit1, str)
lapply(dfsplit1, summary)
head(df)
tail(df)
